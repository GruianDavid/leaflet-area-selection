{"version":3,"sources":["B-Open.svg","../../src/utils.js","../../src/drawing-pane.js","../../src/events.js","../../src/control.js","../../src/index.js","index.js"],"names":["module","exports","cls","name","additionalClasses","clsName","index","s","toCamelCase","styles","setPosition","el","point","offset","nextPoint","Browser","DomUtil","CLICK_EVT","isTrustedEvent","event","window","PANE_NAME","createPane","map","options","newNode","referenceNode","standardPanesContainer","overlayPanesContainer","active","fadeOnActivation","drawingPaneContainer","insertAfter","pane","removeEndClickArea","control","marker","doNothingHandler","onAddPoint","this","clientX","clientY","touch","rectDrawing","rectDrawEnd","bbox","x","y","markers","length","once","addEndClickArea","icon","className","iconSize","draggable","_onMarkerDrag","onMarkerDrag","requestAnimationFrame","newEdge","i","onAddMarker","rest","edge","enoughPoints","phase","weight","color","onRemoveMarker","splice","removed","onUpdatePolygon","polygon","dashArray","DomEvent","onUpdateGhostPoints","ghostMarkers","nextMarker","currentLatLng","currentMarker","nextLatLng","newGhostMarker","onGhostMarkerDragStart","onGhostMarkerDrag","onGhostMarkerDragEnd","onPolygonCreationEnd","onActivate","latlng","firstPoint","lastPoint","opacity","fillOpacity","target","newPoint","fakeEvent","onMouseMove","props","pointA","rectDrawStart","pointB","layers","draggingRect","onDraggingRectEnd","vertex1","vertex2","vertex3","vertex4","DrawAreaSelection","onPolygonReady","onPolygonDblClick","onButtonActivate","onButtonDeactivate","initialize","Util","_mapMoveStart","bind","_mapMoveEnd","_handleMouseMove","onAdd","activateButton","classList","add","remove","onRemove","getMap","addUserHelpPanel","panel","help","setPhase","forceClear","container","_map","getPane","touchMarker","firstMarker","hoverClosePoint","outClosePoint","clearMarkers","clearGhostMarkers","clearPolygon","removeFrom","closeLine","deactivate","activate","drawAreaSelection","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","center","Map","tap","dragging","mobile","setView","tileLayer","attribution","on","MAP_LOADED","addTo","popup","document","createElement","innerHTML","bindPopup","areaSelection","preview","getElementById","textContent","JSON","stringify","toGeoJSON","undefined","scrollTop","scrollHeight","ev","geoJSON","style","console","log","position","addControl","querySelector","addEventListener"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,oC,0TCUpC,SAASC,EAAIC,EAAMC,QAAwB,IAAxBA,MAAoB,IAC5C,IAAMC,EARD,SAAqBF,GAC1B,OAAOA,EAAA,gBAEA,qBAAeG,WAAqBC,KAArBD,cAA0CC,YAAzD,MAFA,KAAP,IAOgBC,CAAhB,GACA,OAAIC,EAAJ,GACSL,EACAK,EADiB,eAEjBA,EAFiB,OAAxB,EAKKL,EAAuBD,EAAN,MAAxB,EAYK,SAASO,EAAYC,EAAIC,EAAOC,QAAe,IAAfA,MAAS,MAC9C,IAAMC,EAAYD,EAASD,MAAH,GAAxB,EACAD,iBAEII,UAAJ,MACEC,6BAEAL,aAAgBG,IAAhBH,KACAA,YAAeG,IAAfH,MAIG,IAAMM,EAAYF,4BAAlB,QAGA,SAASG,EAAeC,GAC7B,OAAOA,aAAmBC,OAA1B,QC3CK,IAAMC,EAAN,sBAcA,SAASC,EAAWC,EAAKC,GAC9B,IDG0BC,EAASC,ECH7BC,EAAyBJ,+BAA/B,qBACMK,EAdR,SAA8BJ,GAAS,IAC7BK,EAA6BL,EADA,OACrBM,EAAqBN,EADA,iBASrC,OAPiBR,uBAEfd,EAAI,2BAAD,gBAEc2B,EAAS,GAFvB,cAE0CC,EAAmB,kBAJlE,MAY8BC,CAA9B,GDE0BN,ECDdG,GDCuBF,ECDnCM,GDEAN,0BAA+CA,EAA/CA,aCDA,IAAMO,EAAOV,eAAb,GAUA,OADAU,sBARgB,SAACd,GAEVD,EAAL,KAGAC,oBACAI,6BAGF,EAyBK,SAASW,EAAmBC,GACjC,IAEMC,EAFMD,EAAZ,SACaZ,QAAb,GACeU,cAAf,uBACA,GACEG,W,+MCzDJ,SAASC,EAAiBlB,GACxBA,iCACAA,kCAOK,SAASmB,EAAWnB,GAAO,WAEhC,IAAIoB,KAAJ,WAGA,IAAMhB,EAAMgB,KAAZ,SACMC,EAAqBrB,EANK,QAMjBsB,EAAYtB,EANK,QAQhC,QAAIqB,YAAJ,IAA6BC,EAAuB,CAClD,IAAMC,EAAQvB,iBAAd,GACAqB,EAAUE,EAAVF,QACAC,EAAUC,EAAVD,QAGF,GAAIF,KAAKI,aAAT,OAAwBJ,KAAKK,YAC3BrB,mCADF,CAdgC,MAmBPJ,EAnBO,MAmBxBb,OAnBwB,aAqB1BuC,EADYtB,EAAlB,eACA,wBACMuB,EAAIN,EAAUK,EAApB,KACME,EAAIN,EAAUI,EAApB,IACA,IAAIN,KAAKS,QAAQC,QDHZ,SAAyBd,EAAS,GAAQ,IAAPW,EAAO,KAAJC,EAAI,KACzCxB,EAAMY,EAAZ,SACMF,EAAOV,UAAb,GACMa,EAASpB,uBAAsBd,EAAtBc,sBAAf,GACM6B,EAAOT,EAAb,wBACAA,gCASAA,sBARgB,SAACjB,GAEVD,EAAL,KAGAC,oBACAI,6BAE0C,CAC1C2B,MAAM,IAERd,gCAAsCD,uBAAtCC,IACAA,gCAAsCD,qBAAtCC,IACA1B,EAAY0B,EAAQ,IAAI,EAAJ,QAAT,GAA0B,IAAI,EAAJ,OAAWS,EAAD,MAAV,GAA4BA,EAAD,OAAhEnC,ICdEyC,CAAgBZ,KAAM,CAACO,EAAvBK,IAEF,IAAMvC,EAAQ,IAAI,EAAJ,QAAd,GACMwC,EAAO,IAAI,EAAJ,QAAY,CACvBC,UAAWnD,EADY,sBAEvBoD,SAAU,CAAC,GAAI,MAEXlB,EAAS,IAAI,EAAJ,OAAWb,yBAAX,GAA8C,CAC3D6B,KAD2D,EAE3DG,WAAW,IAEPC,EAAgBC,OAAtB,MACArB,YAAkBoB,EAAclD,SAAiBiC,KAAKS,QAAtB1C,OAAhC8B,IACAA,kBAAuB,YACrBjB,iDAEFiB,gBAAqB,YACnBjB,iDACAuC,uBAAsB,WACpB,yBAGJ,IAMG,EANGC,EAAU,CACdvB,OADc,EAEd9B,SAgBF,GAdA8B,iBAEG,EAMEG,KAAKS,QARVZ,OAEe,YACXjB,kCACAI,kCAEEjB,MAAOA,WAA0BA,QAIvC8B,UACAA,WACAb,0BAEA,OAAIjB,EACF,IADkB,kBAEhB,gCACA,8BAAkCkD,EAAlC,IACA,2BACA,4BACA,oCACA,mCAAsC,YACpCjC,+BACK,UADLA,IAEEjB,MAAOsD,SATJA,EAAItD,EAAb,EAAwBsD,EAAIrB,KAAKS,QAAjC,OAAiDY,IAAK,EAA7CA,KAgBN,SAASC,EAAY,GAA2B,QAAzBvD,aAAyB,MAAjB,KAAiB,EAARwD,E,oIAAQ,cAC/CvC,EAAMgB,KAAZ,SACMwB,EAAO,CACX3B,OAAQ0B,EAAK1B,QAEPY,EAL6C,aAMrD,OAAI1C,EACF0C,UAEAA,gBAEF,IAAMgB,EAAehB,UAArB,EACA,SAAIT,KAAK0B,QACP,EAMO,IAAIjB,UAETA,WAAgB,cAAuB,IAApBZ,EAAoB,EAApBA,OACXgB,EAAOhB,EAAb,UACAgB,oBAAyBlD,EAAI,qBAAsBI,qBAAnD8C,MACAhB,gBAVFY,WAAgB,YAAgB,IAAbZ,EAAa,EAAbA,OACXgB,EAAOhB,EAAb,UACAgB,oBAAyBlD,EAAI,qBAA7BkD,WACAhB,iBAWNb,4BACA,WAAIgB,KAAK0B,QACP1C,iCACAgB,KAAA,kBAGF,SAAIA,KAAK0B,QAEH1B,KAAJ,WACEhB,cAAgBgB,KAAhBhB,WAEF,IACEgB,KAAA,UAAiB,IAAI,EAAJ,SACf,CAACS,YAAD,YAAgCA,EAAQA,SAARA,UADjB,aAEf,CACEkB,OADF,EAEEC,MAFF,UAGEd,UAAW,kBAGf9B,WAAagB,KAAbhB,aAKC,SAAS6C,EAAe,GAAe,eAAb9D,aAAa,MAAL,EAAK,EACtCiB,EAAMgB,KAAZ,SAGA,GAJ4C,aAGvBS,OAArB,EACA,CAGgBT,KAAKS,QAAQqB,OAAO/D,GAApB,EAAhB,GACAgE,wBACA/C,4BACA,WAAIgB,KAAK0B,OACP1C,iCAEF,IAb4C,kBAc1C,gCACA,8BAAkCkC,UAAlC,IACA,2BACA,4BACA,oCACA,mCAAsC,YACpCtC,kCACAI,+BACK,UADLA,IAEEjB,MAAOsD,SAVJA,EAAT,EAAoBA,EAAIrB,KAAKS,QAA7B,OAA6CY,IAAK,EAAzCA,GAcTrB,KAAA,kBAMK,SAASgC,IAAkB,WAC1BhD,EAAMgB,KAAZ,SACQS,EAFwB,aAG1BgB,EAAehB,UAArB,EACMwB,EAAU,IAAI,EAAJ,QACdxB,EAAA,KAAY,YACV,OAD0B,EAAbZ,OACb,eAFY,GAMZ+B,MAAOH,EAAe,oBANV,yBAOZE,OAAQ,IACHF,GAAgB,CAAES,UAAW,SARtB,CASZpB,UAAW,0BAGfmB,QAAsB,YACpBE,iCAGFF,iBAAuB,YAKrB,OAFAE,8BACA,wBACA,KAEEnC,KAAJ,SACEhB,cAAgBgB,KAAhBhB,SAEFgB,KAAA,UACAhB,WAAagB,KAAbhB,SAGK,SAASoD,IAAsB,WAC9BpD,EAAMgB,KAAZ,SACAmB,uBAAsB,WACpB,sBAD0B,IAElBV,EAA0B,EAFR,QAET4B,EAAiB,EAFR,aAG1B5B,WAAgB,cACd,IAAM6B,EAAa7B,EAAQ1C,EAAR0C,GAAqBA,EAAQ1C,EAA7B0C,GAA0CA,EAA7D,GACM8B,EAAgBC,SAAtB,YACMC,EAAaH,SAAnB,YACMjE,EAAQW,yBAA2B,EACtCuD,MAAoBE,EAArB,KADuC,GAEtCF,MAAoBE,EAArB,KAFF,IAKM5B,EAAO,IAAI,EAAJ,QAAY,CACvBC,UAAWnD,EADY,4BAEvBoD,SAAU,CAAC,GAAI,MAEXlB,EAAS,IAAI,EAAJ,OAAWb,yBAAX,GAA8C,CAC3D6B,KAD2D,EAE3DG,WAAW,IAEP0B,EAAiB,CACrB7C,UAEFA,UACAA,mBACAA,iBAAuB8C,OAAvB9C,EAAuB8C,IACvB9C,YAAkB+C,UAA6BP,EAA/CxC,SACAA,eAAqBgD,UAAgCR,EAArDxC,SACAwC,UACAxC,iBAKC,SAASiD,IACd,IAAM9D,EAAMgB,KAAZ,SAEAhB,oBACAA,cAAgBgB,KAAhBhB,WACAgB,KAAA,eAEAA,KAAA,gEACAA,KAAA,mBACAhB,iCACAgB,KAAA,iBACAL,QAMK,SAASoD,EAAWnE,GAEzB,GAAKD,EAAL,IAGA,IAAMK,EAAMgB,KAAZ,SAEAA,KAAA,YAAmBhB,WAAnB,SAIAJ,oBACAA,gBAEoBoB,KAAKf,QAAQK,QAAjC,WAA2CU,KAAK0B,OAGzC1B,KAAL,aACEhB,qBAIFgB,KAAA,2BAAgCA,KAAhC,QAAAA,KAAA,GACKpB,EAAL,kBACEoB,KAAA,eAIFA,KAAA,yBAAAA,KAAA,GACKpB,EAAL,kBACEoB,KAAA,aAKC,SAASkB,EAAanD,GAC3B,IAAMiB,EAAMgB,KAAZ,SACA,OAAO,YACLmB,uBAAsB,WACpBnC,4BACAA,qCAKC,SAAS4D,EAAkB7E,GAAO,WACjCiB,EAAMgB,KAAZ,SACA,OAAO,YAAW,IACRgD,EAAWpE,EADH,OAEhBuC,uBAAsB,WAEpB,IAAM8B,EAAa,UAAnB,GACMC,EAAY,UAAanF,EAAb,GAA0B,UAAaA,EAAvC,GAAoD,UAAtE,GACI,EAAJ,cACEiB,cAAgB,EAAhBA,cAEF,eAAoB,IAAI,EAAJ,QAClB,CAACiE,SAAD,cAAwCC,SADtB,aAElB,CACEtB,MADF,oBAEED,OAFF,EAGEwB,QAHF,GAIEC,YAJF,GAKElB,UAAW,UAGflD,WAAa,EAAbA,cACAA,gCAKC,SAAS2D,IACd,OAAO,YACL/D,+CAIG,SAASiE,EAAqB9E,GAAO,WACpCiB,EAAMgB,KAAZ,SACA,OAAO,YAAW,IACRqD,EAAWzE,EADH,OAEhByE,0CACAA,gBACI,EAAJ,cACErE,cAAgB,EAAhBA,cAEF,IAAMsE,EAAWtE,yBAA2BqE,EAA5C,aAEM/C,EADYtB,EAAlB,eACA,wBACMuE,EAAY,CAChBtD,QAASqD,IAAahD,EADN,KAEhBJ,QAASoD,IAAahD,EAFN,IAGhBvC,MAAOA,EAAQ,GAEjBiB,0BAIG,SAASwE,EAAY5E,GAC1B,IAAKoB,KAAD,eAAmBA,KAAKS,QAAQC,QAAhC,IAAgD9B,SAApD,IAAyEA,UAAqB,CAC5F,IAAMI,EAAMgB,KAAZ,SACA,IAAKA,KAAL,YAAuB,CACrBA,KAAA,cAAqB,CAACpB,EAAD,QAAgBA,EAArC,SACA,IAAM6E,EAAQ,CACZ9B,OADY,EAEZC,MAFY,UAGZd,UAHY,qBAIZqC,QAAS,IAOX,OALAnD,KAAA,cAAoB,IAAI,EAAJ,qBACR,IAAI,EAAJ,YADQ,aAER,IAAI,EAAJ,YAFQ,UAApB,QAIAA,KAAA,gBAGFA,KAAA,YAAmB,CAACpB,EAAD,QAAgBA,EAAnC,SACA,IAAM8E,EAAS,CAAC1D,KAAK2D,cAAN,GAAwB/E,EAAvC,SACMgF,EAAS,CAAChF,EAAD,QAAgBoB,KAAK2D,cAApC,IAEME,EAAS7D,KAAK8D,aAApB,YACAD,gBAAqB,CACnB7E,EAAA,mBAAuB,CAAEiB,QAASD,KAAKK,YAAhB,GAAgCH,QAASF,KAAKK,YAAY,KACjFrB,EAAA,mBAAuB,CAAEiB,QAASyD,EAAX,GAAsBxD,QAASwD,EAAO,KAC7D1E,EAAA,mBAAuB,CAAEiB,QAASD,KAAK2D,cAAhB,GAAkCzD,QAASF,KAAK2D,cAAc,OAEvFE,gBAAqB,CACnB7E,EAAA,mBAAuB,CAAEiB,QAASD,KAAKK,YAAhB,GAAgCH,QAASF,KAAKK,YAAY,KACjFrB,EAAA,mBAAuB,CAAEiB,QAAS2D,EAAX,GAAsB1D,QAAS0D,EAAO,KAC7D5E,EAAA,mBAAuB,CAAEiB,QAASD,KAAK2D,cAAhB,GAAkCzD,QAASF,KAAK2D,cAAc,QAKpF,SAASI,IACd/D,KAAA,eACA,IAAMgE,EAAU,CAAE/D,QAASD,KAAK2D,cAAhB,GAAkCzD,QAASF,KAAK2D,cAAc,IACxEM,EAAU,CAAEhE,QAASD,KAAKK,YAAhB,GAAgCH,QAASF,KAAK2D,cAAc,IACtEO,EAAU,CAAEjE,QAASD,KAAKK,YAAhB,GAAgCH,QAASF,KAAKK,YAAY,IACpE8D,EAAU,CAAElE,QAASD,KAAK2D,cAAhB,GAAkCzD,QAASF,KAAKK,YAAY,IAC5EN,gBACAA,gBACAA,gBACAA,gBACAC,KAAA,6BACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,wBAA6BA,KAA7B,M,IChZWoE,EAAoB,iBAAe,CAC9CnF,QAAS,CAEPK,QAFO,EAIPC,kBAJO,EAOP8E,eAAgB,gBAEhBC,kBAAmB,kBAEnBC,iBAAkB,gBAElBC,mBAAoB,mBAGtBC,WAAY,iBAAwB,IAAdxF,MAAU,IAC9ByF,0BACA1E,KAAA,UAEAA,KAAA,MAAaf,gBAAb,WACAe,KAAA,aAEAA,KAAA,eAEAA,KAAA,mBACAA,KAAA,iBAEAA,KAAA,kBAEAA,KAAA,WAEAA,KAAA,gBAEAA,KAAA,aAEAA,KAAA,eAEAA,KAAA,cAAqBA,KAAK2E,cAAcC,KAAxC5E,MACAA,KAAA,YAAmBA,KAAK6E,YAAYD,KAApC5E,MACAA,KAAA,iBAAwBA,KAAK8E,iBAAiBF,KAA9C5E,OAGF+E,MAAO,YACL/E,KAAA,WAAkBvB,uBAAsBd,EAAxC,kCACAqC,KAAA,eAAsBvB,6BAA6BuB,KAAnD,YAEAA,KAAA,uDACAA,KAAA,kEACAA,KAAA,wCAA8C+C,OAA9C/C,OACAA,KAAA,4CAAiD,YAC/CpB,uBAEFoB,KAAA,eACIA,KAAKgF,eAAeC,UAAUC,IADlC,UAEIlF,KAAKgF,eAAeC,UAAUE,OAFlC,UAGAnF,KAAA,OACA,IAAMN,EAAOX,EAAWC,EAAKgB,KAA7B,SAYA,OAXAA,KAAA,oBACAhB,8CAAiDgB,KAAjDhB,kBACAA,iBAAoBgB,KAApBhB,eACAA,eAAkBgB,KAAlBhB,aACAA,oBAAuBe,OAAvBf,OACAA,qBAAwBsC,OAAxBtC,OACAA,wBAA2B6C,OAA3B7C,OACAA,uBAA0B8D,OAA1B9D,OACAA,yBAA4BgD,OAA5BhD,OACAA,8BAAiCoD,OAAjCpD,OACAA,4BAA+B+E,OAA/B/E,OACOgB,KAAP,YAGFoF,SAAU,YACRpG,iDAAoDgB,KAApDhB,kBACAA,kBAAqBgB,KAArBhB,eACAA,gBAAmBgB,KAAnBhB,aACAA,sBACAA,uBACAA,0BACAA,yBACAA,2BACAA,gCACAA,+BAGFqG,OAAQ,WACN,OAAOrF,KAAP,MAGFqE,eAAgB,WACdrE,KAAA,uBAA4BA,KAA5B,QAAAA,OAGFsE,kBAAmB,YACjBtE,KAAA,0BAA+BA,KAA/B,QAAAA,KAAA,IAGFsF,iBAlG8C,YAmG5C,IAAMC,EAAQ9G,uBAAsBd,EAApC,mBACA4H,uCACAA,iCACA,IAAMC,EAAO,8DACXhH,qBADF,qDAGA+G,gBAEA7F,kBAGF+F,SA9G8C,mBA8GV,IAApBC,OAAa,GAC3B1F,KAAA,QACAA,KAAA,wBAAsB0B,GAElBgE,GAAJ,SAAkB1F,KAAK0B,SACrB1B,KAAA,oBACAA,KAAA,eACAA,KAAA,gBAEF,IACM2F,EADO3F,KAAK4F,KAAKC,QAAvB,GACA,WACA7F,KAAA,eACI2F,mBADJ,YAEIA,gBAFJ,aAKFhB,cAAe,WACR3E,KAAKf,QAAV,SAGAe,KAAA,eAGF6E,YAAa,WAAY,WACvB,GAAK7E,KAAKf,QAAV,QAGA,IAAMD,EAAMgB,KAAZ,KACAmB,uBAAsB,WACpB,kBAGF,IACM2E,EADO9G,UAAb,GACoBU,cAApB,uBACA,KAAiB,CACf,IAAMqG,EAAc/F,KAAKS,QAAQ,GAAjC,OACMH,EAAOwF,EAAb,wBAEA3H,EAAY2H,EADE9G,yBAA2B+G,EAAzC,aACgC,IAAI,EAAJ,OAAWzF,EAAD,MAAV,GAA4BA,EAAD,OAA3DnC,OAIJ6H,gBAAiB,YACXhG,KAAKS,QAAQC,OAAS,GAAKV,KAA/B,WACEA,KAAA,qBAA0BA,KAA1B,OAIJiG,cAAe,YACTjG,KAAJ,WACEA,KAAA,gBAAqBA,KAArB,OAIJkG,aAAc,WAAY,WACxBlG,KAAA,iBAAqB,YAAgB,EAAbH,OACtBA,WAAkB,EAAlBA,SAEFG,KAAA,YAGFmG,kBAAmB,WAAY,WAC7BnG,KAAA,sBAA0B,YAAgB,EAAbH,OAC3BA,WAAkB,EAAlBA,SAEFG,KAAA,iBAGFoG,aAAc,WACZpG,KAAA,SAAgBA,KAAKiC,QAAQoE,WAAWrG,KAAxC,MACAA,KAAA,aACAA,KAAA,WAAkBA,KAAKsG,UAAUD,WAAWrG,KAA5C,MACAA,KAAA,gBAGFuG,WAAY,WACV5G,QACAK,KAAA,0CACAA,KAAA,qDACAA,KAAA,yBAGFwG,SAAU,WAERxG,KAAA,wBACAA,KAAA,uCACAA,KAAA,kDACAA,KAAA,qBAGF8E,iBAAkB,YACX9E,KAAKf,QAAV,QAGAuE,mBC1NJkB,wBAAqB,CACnBN,kBADmB,EAEnBqC,kBD4N+B,YAC/B,YADuD,IAAdxH,MAAU,IAC5C,IAAImF,EAAX,M,gCEvNKsC,OAAKC,QAAQC,UAAUC,YAC9BH,OAAKC,QAAQG,aAAa,CACxBC,cAAeC,EAAQ,GACvBC,QAASD,EAAQ,GACjBE,UAAWF,EAAQ,KAGrB,IAAMG,EAAS,CAAC,UAAW,YAErBnI,EAAM,IAAIoI,MAAI,OAAQ,CAE1BC,KAAK,EACLC,UAAW9I,UAAQ+I,SAClBC,QAAQL,EAAQ,IAEnBM,oBAAU,qDAAsD,CAC9DC,YACE,4FAEDC,GAAG,QAAQ,WACV9I,OAAO+I,YAAa,KAErBC,MAAM7I,GAET,IAAM8I,EAAQC,SAASC,cAAc,OACrCF,EAAMG,UAAN,gHACyCpH,IADzC,UAIAhB,iBAAOsH,GAAQU,MAAM7I,GAAKkJ,UAAUJ,GAEpC,IAAMK,EAAgB,IAAI/D,EAAkB,CAC1CC,eAAgB,SAACpC,GACf,IAAMmG,EAAUL,SAASM,eAAe,WACxCD,EAAQE,YAAcC,KAAKC,UAAUvG,EAAQwG,UAAU,QAAIC,EAAW,GACtEN,EAAQO,UAAYP,EAAQQ,cAE9BtE,kBAAmB,SAACrC,EAASrC,EAASiJ,GACpBC,kBAAQ7G,EAAQwG,YAAa,CAC3CM,MAAO,CACL5F,QAAS,GACTC,YAAa,GACbxB,MAAO,SAGHiG,MAAM7I,GACdY,EAAQ2G,cAEVhC,iBAAkB,WACAwD,SAASM,eAAe,WAChCC,YAAc,4BACtBU,QAAQC,IAAI,8BAEdzE,mBAAoB,SAACvC,GACnB,IAAMmG,EAAUL,SAASM,eAAe,WACxCW,QAAQC,IAAI,eACZb,EAAQE,YAAR,8CAEFrG,EAAUsG,KAAKC,UAAUvG,EAAQwG,UAAU,QAAIC,EAAW,GAAK,SAE/DQ,SAAU,YAGZlK,EAAImK,WAAWhB,GAECJ,SAASqB,cAAc,YAC/BC,iBAAiB,SAAS,WACJ,aAAxBlB,EAAczG,MAChByG,EAAc5B,aAEd4B,EAAc3B,gB","file":"static/js/main.fdf5a694.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/B-Open.a8695c4b.svg\";","import { Browser, DomUtil } from 'leaflet';\nimport styles from './styles.module.css';\n\nexport function toCamelCase(name) {\n  return name\n    .split('-')\n    .map((s, index) => (index === 0 ? s : `${s[0].toUpperCase()}${s.substring(1)}`))\n    .join('');\n}\n\nexport function cls(name, additionalClasses = '') {\n  const clsName = toCamelCase(name);\n  if (styles[clsName]) {\n    return additionalClasses\n      ? `${styles[clsName]} ${name} ${additionalClasses}`\n      : `${styles[clsName]} ${name}`;\n  }\n  // Fallback to just return name and maybe additional classes\n  return additionalClasses ? `${name} ${additionalClasses}` : name;\n}\n\nexport function insertAfter(newNode, referenceNode) {\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n\n/**\n * Like original DomUtil.setPosition, but takes an optional offset\n * @param {DOMElement} el\n * @param {Point} point\n */\nexport function setPosition(el, point, offset = null) {\n  const nextPoint = offset ? point.add(offset) : point;\n  el._leaflet_pos = nextPoint;\n\n  if (Browser.any3d) {\n    DomUtil.setTransform(el, nextPoint);\n  } else {\n    el.style.left = nextPoint.x + 'px';\n    el.style.top = nextPoint.y + 'px';\n  }\n}\n\nexport const CLICK_EVT = Browser.mobile ? 'touchend' : 'click';\n\n// This still needed due to bad Leaflet bug on Safari. See https://github.com/Leaflet/Leaflet/issues/7255\nexport function isTrustedEvent(event) {\n  return event.isTrusted || window.Cypress;\n}\n","import { DomUtil, Point } from 'leaflet';\nimport { cls, insertAfter, setPosition, CLICK_EVT, isTrustedEvent } from './utils';\n\nexport const PANE_NAME = 'area-draw-selection';\n\nfunction drawingPaneContainer(options) {\n  const { active, fadeOnActivation } = options;\n  const drawPane = DomUtil.create(\n    'div',\n    cls(\n      'leaflet-map-overlay-pane',\n      `leaflet-pane${active ? '' : ' inactive'}${fadeOnActivation ? ' fading-enabled' : ''}`\n    )\n  );\n  return drawPane;\n}\n\nexport function createPane(map, options) {\n  const standardPanesContainer = map.getContainer().querySelector('.leaflet-map-pane');\n  const overlayPanesContainer = drawingPaneContainer(options);\n  insertAfter(overlayPanesContainer, standardPanesContainer);\n  const pane = map.createPane(PANE_NAME, overlayPanesContainer);\n  const handler = (event) => {\n    // Non-sense, but required on Safari. Probably related to https://github.com/Leaflet/Leaflet/issues/7255\n    if (!isTrustedEvent(event)) {\n      return;\n    }\n    event.stopPropagation();\n    map.fire('as:point-add', event);\n  };\n  pane.addEventListener(CLICK_EVT, handler);\n  return pane;\n}\n\nexport function addEndClickArea(control, [x, y]) {\n  const map = control.getMap();\n  const pane = map.getPane(PANE_NAME);\n  const marker = DomUtil.create('div', cls('end-selection-area'), pane);\n  const bbox = marker.getBoundingClientRect();\n  marker.setAttribute('role', 'button');\n  const handler = (event) => {\n    // Non-sense, but required on Safari. Probably related to https://github.com/Leaflet/Leaflet/issues/7255\n    if (!isTrustedEvent(event)) {\n      return;\n    }\n    event.stopPropagation();\n    map.fire('as:creation-end');\n  };\n  marker.addEventListener(CLICK_EVT, handler, {\n    once: true,\n  });\n  marker.addEventListener('mouseenter', control.hoverClosePoint.bind(control));\n  marker.addEventListener('mouseleave', control.outClosePoint.bind(control));\n  setPosition(marker, new Point(x, y), new Point(-bbox.width / 2, -bbox.height / 2));\n}\n\nexport function removeEndClickArea(control) {\n  const map = control.getMap();\n  const pane = map.getPane(PANE_NAME);\n  const marker = pane.querySelector('.end-selection-area');\n  if (marker) {\n    marker.remove();\n  }\n}\n","import { DivIcon, Marker, Point, Polygon, Polyline, DomEvent, LayerGroup } from 'leaflet';\nimport { cls, isTrustedEvent, CLICK_EVT } from './utils';\nimport { addEndClickArea, removeEndClickArea } from './drawing-pane';\n\nfunction doNothingHandler(event) {\n  event.originalEvent.preventDefault();\n  event.originalEvent.stopPropagation();\n}\n\n/**\n * Event handler reacting to an add point action\n * @param {MouseEvent|TouchEvent} event\n */\nexport function onAddPoint(event) {\n  // Default behavior while dragging\n  if (this.mapMoving) {\n    return;\n  }\n  const map = this.getMap();\n  let { clientX, clientY } = event;\n  // Touch device\n  if (clientX === undefined && clientY === undefined) {\n    const touch = event.changedTouches[0];\n    clientX = touch.clientX;\n    clientY = touch.clientY;\n  }\n  // We were drawing a rect, so we don't perform the canonical action and we stop here\n  if (this.rectDrawing && this.rectDrawEnd !== null) {\n    map.fire('as:dragging-rect-end');\n    return;\n  }\n\n  const { index = null } = event;\n  const container = map.getContainer();\n  const bbox = container.getBoundingClientRect();\n  const x = clientX - bbox.left;\n  const y = clientY - bbox.top;\n  if (this.markers.length === 0) {\n    // this is the first point: let's add a sensible click area on the pane too\n    addEndClickArea(this, [x, y]);\n  }\n  const point = new Point(x, y);\n  const icon = new DivIcon({\n    className: cls('area-select-marker'),\n    iconSize: [16, 16],\n  });\n  const marker = new Marker(map.containerPointToLatLng(point), {\n    icon,\n    draggable: true,\n  });\n  const _onMarkerDrag = onMarkerDrag.bind(this);\n  marker.on('drag', _onMarkerDrag(index === null ? this.markers.length : index));\n  marker.on('dragstart', (event) => {\n    event.target.getElement().classList.add('active');\n  });\n  marker.on('dragend', (event) => {\n    event.target.getElement().classList.remove('active');\n    requestAnimationFrame(() => {\n      this.onPolygonReady();\n    });\n  });\n  const newEdge = {\n    marker,\n    index,\n  };\n  marker.on(\n    'dblclick',\n    ((length) => (event) => {\n      event.originalEvent.stopPropagation();\n      map.fire('as:marker-remove', {\n        ...newEdge,\n        index: index === null ? length : index,\n      });\n    })(this.markers.length)\n  );\n  marker.on(CLICK_EVT, doNothingHandler);\n  marker.addTo(map);\n  map.fire('as:marker-add', newEdge);\n  // If this point as not been added at the end, we need to update even handlers HOC params to update index\n  if (index !== null) {\n    for (let i = index + 1; i < this.markers.length; i++) {\n      this.markers[i].marker.off('drag');\n      this.markers[i].marker.on('drag', _onMarkerDrag(i));\n      this.markers[i].marker.off(CLICK_EVT);\n      this.markers[i].marker.on(CLICK_EVT, doNothingHandler);\n      this.markers[i].marker.off('dblclick');\n      this.markers[i].marker.on('dblclick', (event) => {\n        map.fire('as:marker-remove', {\n          ...this.markers[i],\n          index: i,\n        });\n      });\n    }\n  }\n}\n\nexport function onAddMarker({ index = null, ...rest }) {\n  const map = this.getMap();\n  const edge = {\n    marker: rest.marker,\n  };\n  const { markers } = this;\n  if (index === null) {\n    markers.push(edge);\n  } else {\n    markers.splice(index, 0, edge);\n  }\n  const enoughPoints = markers.length >= 3;\n  if (this.phase === 'draw') {\n    if (!enoughPoints) {\n      markers.forEach(({ marker }) => {\n        const icon = marker.getIcon();\n        icon.options.className = cls('area-select-marker', 'invalid');\n        marker.setIcon(icon);\n      });\n    } else if (markers.length === 3) {\n      // Restore colors\n      markers.forEach(({ marker }, index) => {\n        const icon = marker.getIcon();\n        icon.options.className = cls('area-select-marker', index === 0 ? 'start-marker' : null);\n        marker.setIcon(icon);\n      });\n    }\n  }\n  map.fire('as:update-polygon');\n  if (this.phase === 'adjust') {\n    map.fire('as:update-ghost-points');\n    this.onPolygonReady();\n  }\n\n  if (this.phase === 'draw') {\n    // close line\n    if (this.closeLine) {\n      map.removeLayer(this.closeLine);\n    }\n    if (enoughPoints) {\n      this.closeLine = new Polyline(\n        [markers[0].marker.getLatLng(), markers[markers.length - 1].marker.getLatLng()],\n        {\n          weight: 3,\n          color: '#c0c0c0',\n          className: 'areaCloseLine',\n        }\n      );\n      map.addLayer(this.closeLine);\n    }\n  }\n}\n\nexport function onRemoveMarker({ index = 0 }) {\n  const map = this.getMap();\n  const { markers } = this;\n  const enoughPoints = markers.length > 3;\n  if (!enoughPoints) {\n    return;\n  }\n  const removed = this.markers.splice(index || 0, 1);\n  removed[0].marker.removeFrom(map);\n  map.fire('as:update-polygon');\n  if (this.phase === 'adjust') {\n    map.fire('as:update-ghost-points');\n  }\n  for (let i = index; i < this.markers.length; i++) {\n    this.markers[i].marker.off('drag');\n    this.markers[i].marker.on('drag', onMarkerDrag.bind(this)(i));\n    this.markers[i].marker.off(CLICK_EVT);\n    this.markers[i].marker.on(CLICK_EVT, doNothingHandler);\n    this.markers[i].marker.off('dblclick');\n    this.markers[i].marker.on('dblclick', (event) => {\n      event.originalEvent.stopPropagation();\n      map.fire('as:marker-remove', {\n        ...this.markers[i],\n        index: i,\n      });\n    });\n  }\n  this.onPolygonReady();\n}\n\n/**\n * Refresh the polygon on the map\n */\nexport function onUpdatePolygon() {\n  const map = this.getMap();\n  const { markers } = this;\n  const enoughPoints = markers.length >= 3;\n  const polygon = new Polygon(\n    markers.map(({ marker }) => {\n      return marker.getLatLng();\n      // return map.containerPointToLatLng(point);\n    }),\n    {\n      color: enoughPoints ? 'rgb(45, 123, 200)' : 'rgba(220, 53, 69, 0.7)',\n      weight: 2,\n      ...(!enoughPoints && { dashArray: '5, 10' }),\n      className: 'drawing-area-poligon',\n    }\n  );\n  polygon.on(CLICK_EVT, (ev) => {\n    DomEvent.stopPropagation(ev);\n  });\n\n  polygon.on('dblclick', (ev) => {\n    // Preventing zoom-on-doubleclick is not working. I'll leave hacky workarounds to user's implementation\n    // See https://stackoverflow.com/questions/15406537/disable-map-zoom-on-circlemarker-double-click-in-leaflet\n    DomEvent.stopPropagation(ev);\n    this.onPolygonDblClick(ev);\n    return false;\n  });\n  if (this.polygon) {\n    map.removeLayer(this.polygon);\n  }\n  this.polygon = polygon;\n  map.addLayer(this.polygon);\n}\n\nexport function onUpdateGhostPoints() {\n  const map = this.getMap();\n  requestAnimationFrame(() => {\n    this.clearGhostMarkers();\n    const { markers, ghostMarkers } = this;\n    markers.forEach((currentMarker, index) => {\n      const nextMarker = markers[index + 1] ? markers[index + 1] : markers[0];\n      const currentLatLng = currentMarker.marker.getLatLng();\n      const nextLatLng = nextMarker.marker.getLatLng();\n      const point = map.latLngToContainerPoint([\n        (currentLatLng.lat + nextLatLng.lat) / 2,\n        (currentLatLng.lng + nextLatLng.lng) / 2,\n      ]);\n\n      const icon = new DivIcon({\n        className: cls('area-select-ghost-marker'),\n        iconSize: [16, 16],\n      });\n      const marker = new Marker(map.containerPointToLatLng(point), {\n        icon,\n        draggable: true,\n      });\n      const newGhostMarker = {\n        marker,\n      };\n      marker.on(CLICK_EVT, doNothingHandler);\n      marker.on('dblclick', doNothingHandler);\n      marker.on('dragstart', onGhostMarkerDragStart.bind(this)());\n      marker.on('drag', onGhostMarkerDrag.bind(this)(ghostMarkers.length));\n      marker.on('dragend', onGhostMarkerDragEnd.bind(this)(ghostMarkers.length));\n      ghostMarkers.push(newGhostMarker);\n      marker.addTo(map);\n    });\n  });\n}\n\nexport function onPolygonCreationEnd() {\n  const map = this.getMap();\n  // We'll forcly enable the drag on the map (which will be just of the draw pane)\n  map.dragging.enable();\n  map.removeLayer(this.closeLine);\n  this.closeLine = null;\n  // Remove style for the final marker icon\n  this.markers[0].marker.getElement().classList.remove('start-marker');\n  this.setPhase('adjust');\n  map.fire('as:update-ghost-points');\n  this.onPolygonReady();\n  removeEndClickArea(this);\n}\n\n/**\n * Plugin activation (button pressed)\n */\nexport function onActivate(event) {\n  // Non-sense, but required on Safari. Probably related to https://github.com/Leaflet/Leaflet/issues/7255\n  if (!isTrustedEvent(event)) {\n    return;\n  }\n  const map = this.getMap();\n  // storing if the dragging is enabled in the map\n  this._dragStatus = map.dragging._enabled;\n\n  // Let leave to custom callback any call to preventDefault, which will block normal button behaviors\n  // event.preventDefault();\n  event.stopPropagation();\n  event.target.blur();\n  // if current state is active, we need to deactivate\n  const activeState = this.options.active || this.phase === 'adjust';\n  if (activeState) {\n    // Disable dragging if it was enabled before the activation\n    if (!this._dragStatus) {\n      map.dragging.disable();\n    }\n\n    // Calling user's specific event handler\n    this.options.onButtonDeactivate(this.polygon, this, event);\n    if (!event.defaultPrevented) {\n      this.deactivate();\n    }\n  } else {\n    // Calling user's specific event handler\n    this.options.onButtonActivate(this, event);\n    if (!event.defaultPrevented) {\n      this.activate();\n    }\n  }\n}\n\nexport function onMarkerDrag(index) {\n  const map = this.getMap();\n  return (event) => {\n    requestAnimationFrame(() => {\n      map.fire('as:update-polygon');\n      map.fire('as:update-ghost-points');\n    });\n  };\n}\n\nexport function onGhostMarkerDrag(index) {\n  const map = this.getMap();\n  return (event) => {\n    const { latlng } = event;\n    requestAnimationFrame(() => {\n      // Given a ghost point, markers to be used as edges are the one at +0 and +1\n      const firstPoint = this.markers[index];\n      const lastPoint = this.markers[index + 1] ? this.markers[index + 1] : this.markers[0];\n      if (this.ghostPolygon) {\n        map.removeLayer(this.ghostPolygon);\n      }\n      this.ghostPolygon = new Polygon(\n        [firstPoint.marker.getLatLng(), latlng, lastPoint.marker.getLatLng()],\n        {\n          color: 'rgb(45, 123, 200)',\n          weight: 2,\n          opacity: 0.5,\n          fillOpacity: 0.1,\n          dashArray: '5, 10',\n        }\n      );\n      map.addLayer(this.ghostPolygon);\n      map.fire('as:update-polygon');\n    });\n  };\n}\n\nexport function onGhostMarkerDragStart() {\n  return (event) => {\n    event.target.getElement().classList.add('active');\n  };\n}\n\nexport function onGhostMarkerDragEnd(index) {\n  const map = this.getMap();\n  return (event) => {\n    const { target } = event;\n    target.getElement().classList.remove('active');\n    target.removeFrom(map);\n    if (this.ghostPolygon) {\n      map.removeLayer(this.ghostPolygon);\n    }\n    const newPoint = map.latLngToContainerPoint(target.getLatLng());\n    const container = map.getContainer();\n    const bbox = container.getBoundingClientRect();\n    const fakeEvent = {\n      clientX: newPoint.x + bbox.left,\n      clientY: newPoint.y + bbox.top,\n      index: index + 1,\n    };\n    map.fire('as:point-add', fakeEvent);\n  };\n}\n\nexport function onMouseMove(event) {\n  if (!this.mapMoving && this.markers.length === 0 && event.which !== 0 && event.buttons === 1) {\n    const map = this.getMap();\n    if (!this.rectDrawing) {\n      this.rectDrawStart = [event.clientX, event.clientY];\n      const props = {\n        weight: 2,\n        color: '#8B4513',\n        className: 'rect-progress-line',\n        opacity: 0.6,\n      };\n      this.draggingRect = new LayerGroup()\n        .addLayer(new Polyline([], props))\n        .addLayer(new Polyline([], props))\n        .addTo(map);\n      this.rectDrawing = true;\n      return;\n    }\n    this.rectDrawEnd = [event.clientX, event.clientY];\n    const pointA = [this.rectDrawStart[0], event.clientY];\n    const pointB = [event.clientX, this.rectDrawStart[1]];\n\n    const layers = this.draggingRect.getLayers();\n    layers[0].setLatLngs([\n      map.mouseEventToLatLng({ clientX: this.rectDrawEnd[0], clientY: this.rectDrawEnd[1] }),\n      map.mouseEventToLatLng({ clientX: pointA[0], clientY: pointA[1] }),\n      map.mouseEventToLatLng({ clientX: this.rectDrawStart[0], clientY: this.rectDrawStart[1] }),\n    ]);\n    layers[1].setLatLngs([\n      map.mouseEventToLatLng({ clientX: this.rectDrawEnd[0], clientY: this.rectDrawEnd[1] }),\n      map.mouseEventToLatLng({ clientX: pointB[0], clientY: pointB[1] }),\n      map.mouseEventToLatLng({ clientX: this.rectDrawStart[0], clientY: this.rectDrawStart[1] }),\n    ]);\n  }\n}\n\nexport function onDraggingRectEnd() {\n  this.rectDrawing = false;\n  const vertex1 = { clientX: this.rectDrawStart[0], clientY: this.rectDrawStart[1] };\n  const vertex2 = { clientX: this.rectDrawEnd[0], clientY: this.rectDrawStart[1] };\n  const vertex3 = { clientX: this.rectDrawEnd[0], clientY: this.rectDrawEnd[1] };\n  const vertex4 = { clientX: this.rectDrawStart[0], clientY: this.rectDrawEnd[1] };\n  onAddPoint.bind(this)(vertex1);\n  onAddPoint.bind(this)(vertex2);\n  onAddPoint.bind(this)(vertex3);\n  onAddPoint.bind(this)(vertex4);\n  this._map.fire('as:creation-end');\n  this.rectDrawStart = null;\n  this.rectDrawEnd = null;\n  this.draggingRect.removeFrom(this._map);\n}\n","import { DomUtil, Control, Util, Point, Browser } from 'leaflet';\nimport { createPane, removeEndClickArea, PANE_NAME } from './drawing-pane';\nimport { cls, setPosition } from './utils';\nimport {\n  onActivate,\n  onAddMarker,\n  onAddPoint,\n  onDraggingRectEnd,\n  onMouseMove,\n  onPolygonCreationEnd,\n  onRemoveMarker,\n  onUpdateGhostPoints,\n  onUpdatePolygon,\n} from './events';\n\n// import buttonImage from './images/area-icon.png';\n\nexport const DrawAreaSelection = Control.extend({\n  options: {\n    // activate automatically area selection on plugin load\n    active: false,\n    // partially fade the map when draw phase is activated\n    fadeOnActivation: true,\n    /* ******* callbacks ******* */\n    // callback called when draw phase is complete and at every polygon adjustement\n    onPolygonReady: (polygon, control) => {},\n    // callback called when draw phase is complete and double-click is performed on the final polygon\n    onPolygonDblClick: (polygon, control, event) => {},\n    // callback called when user press the activation button\n    onButtonActivate: (control, event) => {},\n    // callback called when user press the button to deactivate (not called when the plugin deactivate itself automatically)\n    onButtonDeactivate: (polygon, control, event) => {},\n  },\n\n  initialize: function (options = {}) {\n    Util.setOptions(this, options);\n    this._map = null;\n    // lifecycle phases: one of inactive, draw, adjust\n    this.phase = options.active ? 'draw' : 'inactive';\n    this.mapMoving = false;\n    // map if in phase of drawing a rectangle\n    this.rectDrawing = false;\n    // where user started to draw a rect\n    this.rectDrawStart = null;\n    this.rectDrawEnd = null;\n    // the dragging rect, composed by two lines\n    this.draggingRect = null;\n    // edge markers used for drawing, next dragging the polygon\n    this.markers = [];\n    // fake markers used for adding rings to the polygon\n    this.ghostMarkers = [];\n    // The actual polygon draw\n    this.polygon = null;\n    // on drawing phase: a line from the last drawn point to the first ones\n    this.closeLine = null;\n\n    this._mapMoveStart = this._mapMoveStart.bind(this);\n    this._mapMoveEnd = this._mapMoveEnd.bind(this);\n    this._handleMouseMove = this._handleMouseMove.bind(this);\n  },\n\n  onAdd: function (map) {\n    this._container = DomUtil.create('div', cls('leaflet-area-selector-control'));\n    this.activateButton = DomUtil.create('button', '', this._container);\n    // this.activateButton.style.backgroundImage = `url('${buttonImage}')`;\n    this.activateButton.setAttribute('aria-label', 'Draw shape');\n    this.activateButton.setAttribute('aria-describedby', 'draw-panel-help');\n    this.activateButton.addEventListener('click', onActivate.bind(this));\n    this.activateButton.addEventListener('dblclick', (event) => {\n      event.stopPropagation();\n    });\n    this.options.active\n      ? this.activateButton.classList.add('active')\n      : this.activateButton.classList.remove('active');\n    this._map = map;\n    const pane = createPane(map, this.options);\n    this.addUserHelpPanel(pane);\n    map.getContainer().addEventListener('mousemove', this._handleMouseMove);\n    map.on('movestart', this._mapMoveStart);\n    map.on('moveend', this._mapMoveEnd);\n    map.on('as:point-add', onAddPoint.bind(this));\n    map.on('as:marker-add', onAddMarker.bind(this));\n    map.on('as:marker-remove', onRemoveMarker.bind(this));\n    map.on('as:creation-end', onPolygonCreationEnd.bind(this));\n    map.on('as:update-polygon', onUpdatePolygon.bind(this));\n    map.on('as:update-ghost-points', onUpdateGhostPoints.bind(this));\n    map.on('as:dragging-rect-end', onDraggingRectEnd.bind(this));\n    return this._container;\n  },\n\n  onRemove: function (map) {\n    map.getContainer().removeEventListener('mousemove', this._handleMouseMove);\n    map.off('movestart', this._mapMoveStart);\n    map.off('moveend', this._mapMoveEnd);\n    map.off('as:point-add');\n    map.off('as:marker-add');\n    map.off('as:marker-remove');\n    map.off('as:creation-end');\n    map.off('as:update-polygon');\n    map.off('as:update-ghost-points');\n    map.off('as:dragging-rect-end');\n  },\n\n  getMap: function () {\n    return this._map;\n  },\n\n  onPolygonReady: function () {\n    this.options.onPolygonReady(this.polygon, this);\n  },\n\n  onPolygonDblClick: function (ev) {\n    this.options.onPolygonDblClick(this.polygon, this, ev);\n  },\n\n  addUserHelpPanel(pane) {\n    const panel = DomUtil.create('div', cls('draw-pane-help'));\n    panel.setAttribute('id', 'draw-panel-help');\n    panel.setAttribute('role', 'tooltip');\n    const help = `Define a polygon by clicking of the map to define vertexes${\n      Browser.mobile ? `.` : ` or click-and-drag to obtain a rectangular shape.`\n    }`;\n    panel.textContent = help;\n\n    pane.appendChild(panel);\n  },\n\n  setPhase(phase, forceClear = false) {\n    this.phase = phase;\n    this.options.active = phase === 'draw';\n    // If we didn't finished to fill a polygon, let's clear all\n    if (forceClear || this.phase === 'draw') {\n      this.clearGhostMarkers();\n      this.clearMarkers();\n      this.clearPolygon();\n    }\n    const pane = this._map.getPane(PANE_NAME);\n    const container = pane.parentNode;\n    this.options.active\n      ? container.classList.remove('inactive')\n      : container.classList.add('inactive');\n  },\n\n  _mapMoveStart: function () {\n    if (!this.options.active) {\n      return;\n    }\n    this.mapMoving = true;\n  },\n\n  _mapMoveEnd: function () {\n    if (!this.options.active) {\n      return;\n    }\n    const map = this._map;\n    requestAnimationFrame(() => {\n      this.mapMoving = false;\n    });\n    // Re-position end of selection HTML element\n    const pane = map.getPane(PANE_NAME);\n    const touchMarker = pane.querySelector('.end-selection-area');\n    if (touchMarker) {\n      const firstMarker = this.markers[0].marker;\n      const bbox = touchMarker.getBoundingClientRect();\n      const point = map.latLngToContainerPoint(firstMarker.getLatLng());\n      setPosition(touchMarker, point, new Point(-bbox.width / 2, -bbox.height / 2));\n    }\n  },\n\n  hoverClosePoint: function (event) {\n    if (this.markers.length > 2 && this.closeLine) {\n      this.closeLine.removeFrom(this._map);\n    }\n  },\n\n  outClosePoint: function (event) {\n    if (this.closeLine) {\n      this.closeLine.addTo(this._map);\n    }\n  },\n\n  clearMarkers: function () {\n    this.markers.forEach(({ marker }) => {\n      marker.removeFrom(this._map);\n    });\n    this.markers = [];\n  },\n\n  clearGhostMarkers: function () {\n    this.ghostMarkers.forEach(({ marker }) => {\n      marker.removeFrom(this._map);\n    });\n    this.ghostMarkers = [];\n  },\n\n  clearPolygon: function () {\n    this.polygon && this.polygon.removeFrom(this._map);\n    this.polygon = null;\n    this.closeLine && this.closeLine.removeFrom(this._map);\n    this.closeLine = null;\n  },\n\n  deactivate: function () {\n    removeEndClickArea(this);\n    this.activateButton.classList.remove('active');\n    this._map.getContainer().classList.remove('drawing-area');\n    this.setPhase('inactive', true);\n  },\n\n  activate: function () {\n    // When activating the plugin we'll disable dragging temporarely (in case we are drawing a rect)\n    this._map.dragging.disable();\n    this.activateButton.classList.add('active');\n    this._map.getContainer().classList.add('drawing-area');\n    this.setPhase('draw', true);\n  },\n\n  _handleMouseMove: function (event) {\n    if (!this.options.active) {\n      return;\n    }\n    onMouseMove.bind(this)(event);\n  },\n});\n\nexport const drawAreaSelection = function (options = {}) {\n  return new DrawAreaSelection(options);\n};\n","import { Util, Control } from 'leaflet';\nimport { DrawAreaSelection, drawAreaSelection } from './control';\n\nUtil.extend(Control, {\n  DrawAreaSelection,\n  drawAreaSelection,\n});\n\nexport { DrawAreaSelection, drawAreaSelection };\n","/* eslint-disable no-console */\nimport { Map, Icon, tileLayer, marker, geoJSON, Browser } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '@bopen/leaflet-area-selection/dist/index.css';\nimport { DrawAreaSelection } from '@bopen/leaflet-area-selection';\n\nimport './index.css';\n\nimport icon from './B-Open.svg';\n\n// See https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-483402699\ndelete Icon.Default.prototype._getIconUrl;\nIcon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst center = [41.901493, 12.5009157];\n\nconst map = new Map('root', {\n  // Fix for a bug in Leaflet 1.7.1. See https://github.com/Leaflet/Leaflet/issues/7255\n  tap: false,\n  dragging: !Browser.mobile,\n}).setView(center, 13);\n\ntileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  attribution:\n    '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n})\n  .on('load', () => {\n    window.MAP_LOADED = true;\n  })\n  .addTo(map);\n\nconst popup = document.createElement('div');\npopup.innerHTML = `<div style=\"text-align: center; font-size: 120%\">B-Open</div>\n<img alt=\"B-Open logo\" width=\"75\" src=\"${icon}\" />\n`;\n\nmarker(center).addTo(map).bindPopup(popup);\n\nconst areaSelection = new DrawAreaSelection({\n  onPolygonReady: (polygon) => {\n    const preview = document.getElementById('polygon');\n    preview.textContent = JSON.stringify(polygon.toGeoJSON(3), undefined, 2);\n    preview.scrollTop = preview.scrollHeight;\n  },\n  onPolygonDblClick: (polygon, control, ev) => {\n    const geojson = geoJSON(polygon.toGeoJSON(), {\n      style: {\n        opacity: 0.5,\n        fillOpacity: 0.2,\n        color: 'red',\n      },\n    });\n    geojson.addTo(map);\n    control.deactivate();\n  },\n  onButtonActivate: () => {\n    const preview = document.getElementById('polygon');\n    preview.textContent = 'Please, draw your polygon';\n    console.log('Please, draw your polygon');\n  },\n  onButtonDeactivate: (polygon) => {\n    const preview = document.getElementById('polygon');\n    console.log('Deactivated');\n    preview.textContent = `Deactivated! Current polygon is:\n\n${polygon ? JSON.stringify(polygon.toGeoJSON(3), undefined, 2) : 'null'}`;\n  },\n  position: 'topleft',\n});\n\nmap.addControl(areaSelection);\n\nconst command = document.querySelector('#control');\ncommand.addEventListener('click', function () {\n  if (areaSelection.phase !== 'inactive') {\n    areaSelection.deactivate();\n  } else {\n    areaSelection.activate();\n  }\n});\n"],"sourceRoot":""}