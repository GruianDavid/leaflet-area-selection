{"version":3,"sources":["B-Open.svg","../../src/utils.js","../../src/drawing-pane.js","../../src/events.js","../../src/control.js","../../src/index.js","index.js"],"names":["module","exports","toCamelCase","name","split","map","s","index","toUpperCase","substring","join","cls","additionalClasses","clsName","styles","setPosition","el","point","offset","nextPoint","add","_leaflet_pos","Browser","any3d","DomUtil","setTransform","style","left","x","top","y","CLICK_EVT","mobile","isTrustedEvent","event","isTrusted","window","Cypress","PANE_NAME","createPane","options","newNode","referenceNode","standardPanesContainer","getContainer","querySelector","overlayPanesContainer","active","fadeOnActivation","create","drawingPaneContainer","parentNode","insertBefore","nextSibling","pane","addEventListener","stopPropagation","fire","removeEndClickArea","control","marker","getMap","getPane","remove","doNothingHandler","originalEvent","preventDefault","onAddPoint","this","mapMoving","clientX","clientY","undefined","touch","changedTouches","rectDrawing","rectDrawEnd","bbox","getBoundingClientRect","markers","length","console","log","setAttribute","once","hoverClosePoint","bind","outClosePoint","Point","width","height","addEndClickArea","icon","DivIcon","className","iconSize","Marker","containerPointToLatLng","draggable","_onMarkerDrag","onMarkerDrag","on","target","getElement","classList","requestAnimationFrame","onPolygonReady","newEdge","addTo","i","off","onAddMarker","rest","edge","push","splice","enoughPoints","phase","forEach","getIcon","setIcon","closeLine","removeLayer","Polyline","getLatLng","weight","color","addLayer","onRemoveMarker","removeFrom","onUpdatePolygon","polygon","Polygon","dashArray","ev","DomEvent","onPolygonDblClick","onUpdateGhostPoints","clearGhostMarkers","ghostMarkers","currentMarker","nextMarker","currentLatLng","nextLatLng","latLngToContainerPoint","lat","lng","newGhostMarker","onGhostMarkerDragStart","onGhostMarkerDrag","onGhostMarkerDragEnd","onPolygonCreationEnd","dragging","enable","setPhase","onActivate","_dragStatus","_enabled","blur","disable","onButtonDeactivate","defaultPrevented","deactivate","onButtonActivate","activate","latlng","firstPoint","lastPoint","ghostPolygon","opacity","fillOpacity","newPoint","fakeEvent","onMouseMove","which","buttons","rectDrawStart","props","draggingRect","LayerGroup","pointA","pointB","layers","getLayers","setLatLngs","mouseEventToLatLng","onDraggingRectEnd","vertex1","vertex2","vertex3","vertex4","_map","DrawAreaSelection","Control","extend","initialize","Util","setOptions","_mapMoveStart","_mapMoveEnd","_handleMouseMove","onAdd","_container","activateButton","addUserHelpPanel","onRemove","removeEventListener","panel","help","textContent","appendChild","forceClear","clearMarkers","clearPolygon","container","touchMarker","firstMarker","drawAreaSelection","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","center","Map","tap","setView","tileLayer","attribution","MAP_LOADED","popup","document","createElement","innerHTML","bindPopup","areaSelection","preview","getElementById","JSON","stringify","toGeoJSON","scrollTop","scrollHeight","geoJSON","position","addControl"],"mappings":"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","file":"static/js/main.9b87c625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/B-Open.a8695c4b.svg\";","import { Browser, DomUtil } from 'leaflet';\nimport styles from './styles.module.css';\n\nexport function toCamelCase(name) {\n  return name\n    .split('-')\n    .map((s, index) => (index === 0 ? s : `${s[0].toUpperCase()}${s.substring(1)}`))\n    .join('');\n}\n\nexport function cls(name, additionalClasses = '') {\n  const clsName = toCamelCase(name);\n  if (styles[clsName]) {\n    return additionalClasses\n      ? `${styles[clsName]} ${name} ${additionalClasses}`\n      : `${styles[clsName]} ${name}`;\n  }\n  // Fallback to just return name and maybe additional classes\n  return additionalClasses ? `${name} ${additionalClasses}` : name;\n}\n\nexport function insertAfter(newNode, referenceNode) {\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n\n/**\n * Like original DomUtil.setPosition, but takes an optional offset\n * @param {DOMElement} el\n * @param {Point} point\n */\nexport function setPosition(el, point, offset = null) {\n  const nextPoint = offset ? point.add(offset) : point;\n  el._leaflet_pos = nextPoint;\n\n  if (Browser.any3d) {\n    DomUtil.setTransform(el, nextPoint);\n  } else {\n    el.style.left = nextPoint.x + 'px';\n    el.style.top = nextPoint.y + 'px';\n  }\n}\n\nexport const CLICK_EVT = Browser.mobile ? 'touchend' : 'click';\n\n// This still needed due to bad Leaflet bug on Safari. See https://github.com/Leaflet/Leaflet/issues/7255\nexport function isTrustedEvent(event) {\n  return event.isTrusted || window.Cypress;\n}\n","import { DomUtil, Point } from 'leaflet';\nimport { cls, insertAfter, setPosition, CLICK_EVT, isTrustedEvent } from './utils';\n\nexport const PANE_NAME = 'area-draw-selection';\n\nfunction drawingPaneContainer(options) {\n  const { active, fadeOnActivation } = options;\n  const drawPane = DomUtil.create(\n    'div',\n    cls(\n      'leaflet-map-overlay-pane',\n      `leaflet-pane${active ? '' : ' inactive'}${fadeOnActivation ? ' fading-enabled' : ''}`\n    )\n  );\n  return drawPane;\n}\n\nexport function createPane(map, options) {\n  const standardPanesContainer = map.getContainer().querySelector('.leaflet-map-pane');\n  const overlayPanesContainer = drawingPaneContainer(options);\n  insertAfter(overlayPanesContainer, standardPanesContainer);\n  const pane = map.createPane(PANE_NAME, overlayPanesContainer);\n  const handler = (event) => {\n    // Non-sense, but required on Safari. Probably related to https://github.com/Leaflet/Leaflet/issues/7255\n    if (!isTrustedEvent(event)) {\n      return;\n    }\n    event.stopPropagation();\n    map.fire('as:point-add', event);\n  };\n  pane.addEventListener(CLICK_EVT, handler);\n  return pane;\n}\n\nexport function addEndClickArea(control, [x, y]) {\n  // eslint-disable-next-line no-console\n  console.log('yeeeey');\n  const map = control.getMap();\n  const pane = map.getPane(PANE_NAME);\n  const marker = DomUtil.create('div', cls('end-selection-area'), pane);\n  const bbox = marker.getBoundingClientRect();\n  marker.setAttribute('role', 'button');\n  const handler = (event) => {\n    // Non-sense, but required on Safari. Probably related to https://github.com/Leaflet/Leaflet/issues/7255\n    if (!isTrustedEvent(event)) {\n      return;\n    }\n    event.stopPropagation();\n    map.fire('as:creation-end');\n  };\n  marker.addEventListener(CLICK_EVT, handler, {\n    once: true,\n  });\n  marker.addEventListener('mouseenter', control.hoverClosePoint.bind(control));\n  marker.addEventListener('mouseleave', control.outClosePoint.bind(control));\n  setPosition(marker, new Point(x, y), new Point(-bbox.width / 2, -bbox.height / 2));\n}\n\nexport function removeEndClickArea(control) {\n  const map = control.getMap();\n  const pane = map.getPane(PANE_NAME);\n  const marker = pane.querySelector('.end-selection-area');\n  if (marker) {\n    marker.remove();\n  }\n}\n","import { DivIcon, Marker, Point, Polygon, Polyline, DomEvent, LayerGroup } from 'leaflet';\nimport { cls, isTrustedEvent, CLICK_EVT } from './utils';\nimport { addEndClickArea, removeEndClickArea } from './drawing-pane';\n\nfunction doNothingHandler(event) {\n  event.originalEvent.preventDefault();\n  event.originalEvent.stopPropagation();\n}\n\n/**\n * Event handler reacting to an add point action\n * @param {MouseEvent|TouchEvent} event\n */\nexport function onAddPoint(event) {\n  // Default behavior while dragging\n  if (this.mapMoving) {\n    return;\n  }\n  const map = this.getMap();\n  let { clientX, clientY } = event;\n  // Touch device\n  if (clientX === undefined && clientY === undefined) {\n    const touch = event.changedTouches[0];\n    clientX = touch.clientX;\n    clientY = touch.clientY;\n  }\n  // We were drawing a rect, so we don't perform the canonical action and we stop here\n  if (this.rectDrawing && this.rectDrawEnd !== null) {\n    map.fire('as:dragging-rect-end');\n    return;\n  }\n\n  const { index = null } = event;\n  const container = map.getContainer();\n  const bbox = container.getBoundingClientRect();\n  const x = clientX - bbox.left;\n  const y = clientY - bbox.top;\n  if (this.markers.length === 0) {\n    // this is the first point: let's add a sensible click area on the pane too\n    addEndClickArea(this, [x, y]);\n  }\n  const point = new Point(x, y);\n  const icon = new DivIcon({\n    className: cls('area-select-marker'),\n    iconSize: [16, 16],\n  });\n  const marker = new Marker(map.containerPointToLatLng(point), {\n    icon,\n    draggable: true,\n  });\n  const _onMarkerDrag = onMarkerDrag.bind(this);\n  marker.on('drag', _onMarkerDrag(index === null ? this.markers.length : index));\n  marker.on('dragstart', (event) => {\n    event.target.getElement().classList.add('active');\n  });\n  marker.on('dragend', (event) => {\n    event.target.getElement().classList.remove('active');\n    requestAnimationFrame(() => {\n      this.onPolygonReady();\n    });\n  });\n  const newEdge = {\n    marker,\n    index,\n  };\n  marker.on(\n    'dblclick',\n    ((length) => (event) => {\n      event.originalEvent.stopPropagation();\n      map.fire('as:marker-remove', {\n        ...newEdge,\n        index: index === null ? length : index,\n      });\n    })(this.markers.length)\n  );\n  marker.on(CLICK_EVT, doNothingHandler);\n  marker.addTo(map);\n  map.fire('as:marker-add', newEdge);\n  // If this point as not been added at the end, we need to update even handlers HOC params to update index\n  if (index !== null) {\n    for (let i = index + 1; i < this.markers.length; i++) {\n      this.markers[i].marker.off('drag');\n      this.markers[i].marker.on('drag', _onMarkerDrag(i));\n      this.markers[i].marker.off(CLICK_EVT);\n      this.markers[i].marker.on(CLICK_EVT, doNothingHandler);\n      this.markers[i].marker.off('dblclick');\n      this.markers[i].marker.on('dblclick', (event) => {\n        map.fire('as:marker-remove', {\n          ...this.markers[i],\n          index: i,\n        });\n      });\n    }\n  }\n}\n\nexport function onAddMarker({ index = null, ...rest }) {\n  const map = this.getMap();\n  const edge = {\n    marker: rest.marker,\n  };\n  const { markers } = this;\n  if (index === null) {\n    markers.push(edge);\n  } else {\n    markers.splice(index, 0, edge);\n  }\n  const enoughPoints = markers.length >= 3;\n  if (this.phase === 'draw') {\n    if (!enoughPoints) {\n      markers.forEach(({ marker }) => {\n        const icon = marker.getIcon();\n        icon.options.className = cls('area-select-marker', 'invalid');\n        marker.setIcon(icon);\n      });\n    } else if (markers.length === 3) {\n      // Restore colors\n      markers.forEach(({ marker }, index) => {\n        const icon = marker.getIcon();\n        icon.options.className = cls('area-select-marker', index === 0 ? 'start-marker' : null);\n        marker.setIcon(icon);\n      });\n    }\n  }\n  map.fire('as:update-polygon');\n  if (this.phase === 'adjust') {\n    map.fire('as:update-ghost-points');\n    this.onPolygonReady();\n  }\n\n  if (this.phase === 'draw') {\n    // close line\n    if (this.closeLine) {\n      map.removeLayer(this.closeLine);\n    }\n    if (enoughPoints) {\n      this.closeLine = new Polyline(\n        [markers[0].marker.getLatLng(), markers[markers.length - 1].marker.getLatLng()],\n        {\n          weight: 3,\n          color: '#c0c0c0',\n          className: 'areaCloseLine',\n        }\n      );\n      map.addLayer(this.closeLine);\n    }\n  }\n}\n\nexport function onRemoveMarker({ index = 0 }) {\n  const map = this.getMap();\n  const { markers } = this;\n  const enoughPoints = markers.length > 3;\n  if (!enoughPoints) {\n    return;\n  }\n  const removed = this.markers.splice(index || 0, 1);\n  removed[0].marker.removeFrom(map);\n  map.fire('as:update-polygon');\n  if (this.phase === 'adjust') {\n    map.fire('as:update-ghost-points');\n  }\n  for (let i = index; i < this.markers.length; i++) {\n    this.markers[i].marker.off('drag');\n    this.markers[i].marker.on('drag', onMarkerDrag.bind(this)(i));\n    this.markers[i].marker.off(CLICK_EVT);\n    this.markers[i].marker.on(CLICK_EVT, doNothingHandler);\n    this.markers[i].marker.off('dblclick');\n    this.markers[i].marker.on('dblclick', (event) => {\n      event.originalEvent.stopPropagation();\n      map.fire('as:marker-remove', {\n        ...this.markers[i],\n        index: i,\n      });\n    });\n  }\n  this.onPolygonReady();\n}\n\n/**\n * Refresh the polygon on the map\n */\nexport function onUpdatePolygon() {\n  const map = this.getMap();\n  const { markers } = this;\n  const enoughPoints = markers.length >= 3;\n  const polygon = new Polygon(\n    markers.map(({ marker }) => {\n      return marker.getLatLng();\n      // return map.containerPointToLatLng(point);\n    }),\n    {\n      color: enoughPoints ? 'rgb(45, 123, 200)' : 'rgba(220, 53, 69, 0.7)',\n      weight: 2,\n      ...(!enoughPoints && { dashArray: '5, 10' }),\n      className: 'drawing-area-poligon',\n    }\n  );\n  polygon.on(CLICK_EVT, (ev) => {\n    DomEvent.stopPropagation(ev);\n  });\n\n  polygon.on('dblclick', (ev) => {\n    // Preventing zoom-on-doubleclick is not working. I'll leave hacky workarounds to user's implementation\n    // See https://stackoverflow.com/questions/15406537/disable-map-zoom-on-circlemarker-double-click-in-leaflet\n    DomEvent.stopPropagation(ev);\n    this.onPolygonDblClick(ev);\n    return false;\n  });\n  if (this.polygon) {\n    map.removeLayer(this.polygon);\n  }\n  this.polygon = polygon;\n  map.addLayer(this.polygon);\n}\n\nexport function onUpdateGhostPoints() {\n  const map = this.getMap();\n  requestAnimationFrame(() => {\n    this.clearGhostMarkers();\n    const { markers, ghostMarkers } = this;\n    markers.forEach((currentMarker, index) => {\n      const nextMarker = markers[index + 1] ? markers[index + 1] : markers[0];\n      const currentLatLng = currentMarker.marker.getLatLng();\n      const nextLatLng = nextMarker.marker.getLatLng();\n      const point = map.latLngToContainerPoint([\n        (currentLatLng.lat + nextLatLng.lat) / 2,\n        (currentLatLng.lng + nextLatLng.lng) / 2,\n      ]);\n\n      const icon = new DivIcon({\n        className: cls('area-select-ghost-marker'),\n        iconSize: [16, 16],\n      });\n      const marker = new Marker(map.containerPointToLatLng(point), {\n        icon,\n        draggable: true,\n      });\n      const newGhostMarker = {\n        marker,\n      };\n      marker.on(CLICK_EVT, doNothingHandler);\n      marker.on('dblclick', doNothingHandler);\n      marker.on('dragstart', onGhostMarkerDragStart.bind(this)());\n      marker.on('drag', onGhostMarkerDrag.bind(this)(ghostMarkers.length));\n      marker.on('dragend', onGhostMarkerDragEnd.bind(this)(ghostMarkers.length));\n      ghostMarkers.push(newGhostMarker);\n      marker.addTo(map);\n    });\n  });\n}\n\nexport function onPolygonCreationEnd() {\n  const map = this.getMap();\n  // We'll forcly enable the drag on the map (which will be just of the draw pane)\n  map.dragging.enable();\n  map.removeLayer(this.closeLine);\n  this.closeLine = null;\n  // Remove style for the final marker icon\n  this.markers[0].marker.getElement().classList.remove('start-marker');\n  this.setPhase('adjust');\n  map.fire('as:update-ghost-points');\n  this.onPolygonReady();\n  removeEndClickArea(this);\n}\n\n/**\n * Plugin activation (button pressed)\n */\nexport function onActivate(event) {\n  // Non-sense, but required on Safari. Probably related to https://github.com/Leaflet/Leaflet/issues/7255\n  if (!isTrustedEvent(event)) {\n    return;\n  }\n  const map = this.getMap();\n  // storing if the dragging is enabled in the map\n  this._dragStatus = map.dragging._enabled;\n\n  // Let leave to custom callback any call to preventDefault, which will block normal button behaviors\n  // event.preventDefault();\n  event.stopPropagation();\n  event.target.blur();\n  // if current state is active, we need to deactivate\n  const activeState = this.options.active || this.phase === 'adjust';\n  if (activeState) {\n    // Disable dragging if it was enabled before the activation\n    if (!this._dragStatus) {\n      map.dragging.disable();\n    }\n\n    // Calling user's specific event handler\n    this.options.onButtonDeactivate(this.polygon, this, event);\n    if (!event.defaultPrevented) {\n      this.deactivate();\n    }\n  } else {\n    // Calling user's specific event handler\n    this.options.onButtonActivate(this, event);\n    if (!event.defaultPrevented) {\n      this.activate();\n    }\n  }\n}\n\nexport function onMarkerDrag(index) {\n  const map = this.getMap();\n  return (event) => {\n    requestAnimationFrame(() => {\n      map.fire('as:update-polygon');\n      map.fire('as:update-ghost-points');\n    });\n  };\n}\n\nexport function onGhostMarkerDrag(index) {\n  const map = this.getMap();\n  return (event) => {\n    const { latlng } = event;\n    requestAnimationFrame(() => {\n      // Given a ghost point, markers to be used as edges are the one at +0 and +1\n      const firstPoint = this.markers[index];\n      const lastPoint = this.markers[index + 1] ? this.markers[index + 1] : this.markers[0];\n      if (this.ghostPolygon) {\n        map.removeLayer(this.ghostPolygon);\n      }\n      this.ghostPolygon = new Polygon(\n        [firstPoint.marker.getLatLng(), latlng, lastPoint.marker.getLatLng()],\n        {\n          color: 'rgb(45, 123, 200)',\n          weight: 2,\n          opacity: 0.5,\n          fillOpacity: 0.1,\n          dashArray: '5, 10',\n        }\n      );\n      map.addLayer(this.ghostPolygon);\n      map.fire('as:update-polygon');\n    });\n  };\n}\n\nexport function onGhostMarkerDragStart() {\n  return (event) => {\n    event.target.getElement().classList.add('active');\n  };\n}\n\nexport function onGhostMarkerDragEnd(index) {\n  const map = this.getMap();\n  return (event) => {\n    const { target } = event;\n    target.getElement().classList.remove('active');\n    target.removeFrom(map);\n    if (this.ghostPolygon) {\n      map.removeLayer(this.ghostPolygon);\n    }\n    const newPoint = map.latLngToContainerPoint(target.getLatLng());\n    const container = map.getContainer();\n    const bbox = container.getBoundingClientRect();\n    const fakeEvent = {\n      clientX: newPoint.x + bbox.left,\n      clientY: newPoint.y + bbox.top,\n      index: index + 1,\n    };\n    map.fire('as:point-add', fakeEvent);\n  };\n}\n\nexport function onMouseMove(event) {\n  if (!this.mapMoving && this.markers.length === 0 && event.which !== 0 && event.buttons === 1) {\n    const map = this.getMap();\n    if (!this.rectDrawing) {\n      this.rectDrawStart = [event.clientX, event.clientY];\n      const props = {\n        weight: 2,\n        color: '#8B4513',\n        className: 'rect-progress-line',\n        opacity: 0.6,\n      };\n      this.draggingRect = new LayerGroup()\n        .addLayer(new Polyline([], props))\n        .addLayer(new Polyline([], props))\n        .addTo(map);\n      this.rectDrawing = true;\n      return;\n    }\n    this.rectDrawEnd = [event.clientX, event.clientY];\n    const pointA = [this.rectDrawStart[0], event.clientY];\n    const pointB = [event.clientX, this.rectDrawStart[1]];\n\n    const layers = this.draggingRect.getLayers();\n    layers[0].setLatLngs([\n      map.mouseEventToLatLng({ clientX: this.rectDrawEnd[0], clientY: this.rectDrawEnd[1] }),\n      map.mouseEventToLatLng({ clientX: pointA[0], clientY: pointA[1] }),\n      map.mouseEventToLatLng({ clientX: this.rectDrawStart[0], clientY: this.rectDrawStart[1] }),\n    ]);\n    layers[1].setLatLngs([\n      map.mouseEventToLatLng({ clientX: this.rectDrawEnd[0], clientY: this.rectDrawEnd[1] }),\n      map.mouseEventToLatLng({ clientX: pointB[0], clientY: pointB[1] }),\n      map.mouseEventToLatLng({ clientX: this.rectDrawStart[0], clientY: this.rectDrawStart[1] }),\n    ]);\n  }\n}\n\nexport function onDraggingRectEnd() {\n  this.rectDrawing = false;\n  const vertex1 = { clientX: this.rectDrawStart[0], clientY: this.rectDrawStart[1] };\n  const vertex2 = { clientX: this.rectDrawEnd[0], clientY: this.rectDrawStart[1] };\n  const vertex3 = { clientX: this.rectDrawEnd[0], clientY: this.rectDrawEnd[1] };\n  const vertex4 = { clientX: this.rectDrawStart[0], clientY: this.rectDrawEnd[1] };\n  onAddPoint.bind(this)(vertex1);\n  onAddPoint.bind(this)(vertex2);\n  onAddPoint.bind(this)(vertex3);\n  onAddPoint.bind(this)(vertex4);\n  this._map.fire('as:creation-end');\n  this.rectDrawStart = null;\n  this.rectDrawEnd = null;\n  this.draggingRect.removeFrom(this._map);\n}\n","import { DomUtil, Control, Util, Point, Browser } from 'leaflet';\nimport { createPane, removeEndClickArea, PANE_NAME } from './drawing-pane';\nimport { cls, setPosition } from './utils';\nimport {\n  onActivate,\n  onAddMarker,\n  onAddPoint,\n  onDraggingRectEnd,\n  onMouseMove,\n  onPolygonCreationEnd,\n  onRemoveMarker,\n  onUpdateGhostPoints,\n  onUpdatePolygon,\n} from './events';\n\n// import buttonImage from './images/area-icon.png';\n\nexport const DrawAreaSelection = Control.extend({\n  options: {\n    // activate automatically area selection on plugin load\n    active: false,\n    // partially fade the map when draw phase is activated\n    fadeOnActivation: true,\n    /* ******* callbacks ******* */\n    // callback called when draw phase is complete and at every polygon adjustement\n    onPolygonReady: (polygon, control) => {},\n    // callback called when draw phase is complete and double-click is performed on the final polygon\n    onPolygonDblClick: (polygon, control, event) => {},\n    // callback called when user press the activation button\n    onButtonActivate: (control, event) => {},\n    // callback called when user press the button to deactivate (not called when the plugin deactivate itself automatically)\n    onButtonDeactivate: (polygon, control, event) => {},\n  },\n\n  initialize: function (options = {}) {\n    Util.setOptions(this, options);\n    this._map = null;\n    // lifecycle phases: one of inactive, draw, adjust\n    this.phase = options.active ? 'draw' : 'inactive';\n    this.mapMoving = false;\n    // map if in phase of drawing a rectangle\n    this.rectDrawing = false;\n    // where user started to draw a rect\n    this.rectDrawStart = null;\n    this.rectDrawEnd = null;\n    // the dragging rect, composed by two lines\n    this.draggingRect = null;\n    // edge markers used for drawing, next dragging the polygon\n    this.markers = [];\n    // fake markers used for adding rings to the polygon\n    this.ghostMarkers = [];\n    // The actual polygon draw\n    this.polygon = null;\n    // on drawing phase: a line from the last drawn point to the first ones\n    this.closeLine = null;\n\n    this._mapMoveStart = this._mapMoveStart.bind(this);\n    this._mapMoveEnd = this._mapMoveEnd.bind(this);\n    this._handleMouseMove = this._handleMouseMove.bind(this);\n  },\n\n  onAdd: function (map) {\n    this._container = DomUtil.create('div', cls('leaflet-area-selector-control'));\n    this.activateButton = DomUtil.create('button', '', this._container);\n    // this.activateButton.style.backgroundImage = `url('${buttonImage}')`;\n    this.activateButton.setAttribute('aria-label', 'Draw shape');\n    this.activateButton.setAttribute('aria-describedby', 'draw-panel-help');\n    this.activateButton.addEventListener('click', onActivate.bind(this));\n    this.activateButton.addEventListener('dblclick', (event) => {\n      event.stopPropagation();\n    });\n    this.options.active\n      ? this.activateButton.classList.add('active')\n      : this.activateButton.classList.remove('active');\n    this._map = map;\n    const pane = createPane(map, this.options);\n    this.addUserHelpPanel(pane);\n    map.getContainer().addEventListener('mousemove', this._handleMouseMove);\n    map.on('movestart', this._mapMoveStart);\n    map.on('moveend', this._mapMoveEnd);\n    map.on('as:point-add', onAddPoint.bind(this));\n    map.on('as:marker-add', onAddMarker.bind(this));\n    map.on('as:marker-remove', onRemoveMarker.bind(this));\n    map.on('as:creation-end', onPolygonCreationEnd.bind(this));\n    map.on('as:update-polygon', onUpdatePolygon.bind(this));\n    map.on('as:update-ghost-points', onUpdateGhostPoints.bind(this));\n    map.on('as:dragging-rect-end', onDraggingRectEnd.bind(this));\n    return this._container;\n  },\n\n  onRemove: function (map) {\n    map.getContainer().removeEventListener('mousemove', this._handleMouseMove);\n    map.off('movestart', this._mapMoveStart);\n    map.off('moveend', this._mapMoveEnd);\n    map.off('as:point-add');\n    map.off('as:marker-add');\n    map.off('as:marker-remove');\n    map.off('as:creation-end');\n    map.off('as:update-polygon');\n    map.off('as:update-ghost-points');\n    map.off('as:dragging-rect-end');\n  },\n\n  getMap: function () {\n    return this._map;\n  },\n\n  onPolygonReady: function () {\n    this.options.onPolygonReady(this.polygon, this);\n  },\n\n  onPolygonDblClick: function (ev) {\n    this.options.onPolygonDblClick(this.polygon, this, ev);\n  },\n\n  addUserHelpPanel(pane) {\n    const panel = DomUtil.create('div', cls('draw-pane-help'));\n    panel.setAttribute('id', 'draw-panel-help');\n    panel.setAttribute('role', 'tooltip');\n    const help = `Define a polygon by clicking of the map to define vertexes${\n      Browser.mobile ? `.` : ` or click-and-drag to obtain a rectangular shape.`\n    }`;\n    panel.textContent = help;\n\n    pane.appendChild(panel);\n  },\n\n  setPhase(phase, forceClear = false) {\n    this.phase = phase;\n    this.options.active = phase === 'draw';\n    // If we didn't finished to fill a polygon, let's clear all\n    if (forceClear || this.phase === 'draw') {\n      this.clearGhostMarkers();\n      this.clearMarkers();\n      this.clearPolygon();\n    }\n    const pane = this._map.getPane(PANE_NAME);\n    const container = pane.parentNode;\n    this.options.active\n      ? container.classList.remove('inactive')\n      : container.classList.add('inactive');\n  },\n\n  _mapMoveStart: function () {\n    if (!this.options.active) {\n      return;\n    }\n    this.mapMoving = true;\n  },\n\n  _mapMoveEnd: function () {\n    if (!this.options.active) {\n      return;\n    }\n    const map = this._map;\n    requestAnimationFrame(() => {\n      this.mapMoving = false;\n    });\n    // Re-position end of selection HTML element\n    const pane = map.getPane(PANE_NAME);\n    const touchMarker = pane.querySelector('.end-selection-area');\n    if (touchMarker) {\n      const firstMarker = this.markers[0].marker;\n      const bbox = touchMarker.getBoundingClientRect();\n      const point = map.latLngToContainerPoint(firstMarker.getLatLng());\n      setPosition(touchMarker, point, new Point(-bbox.width / 2, -bbox.height / 2));\n    }\n  },\n\n  hoverClosePoint: function (event) {\n    if (this.markers.length > 2 && this.closeLine) {\n      this.closeLine.removeFrom(this._map);\n    }\n  },\n\n  outClosePoint: function (event) {\n    if (this.closeLine) {\n      this.closeLine.addTo(this._map);\n    }\n  },\n\n  clearMarkers: function () {\n    this.markers.forEach(({ marker }) => {\n      marker.removeFrom(this._map);\n    });\n    this.markers = [];\n  },\n\n  clearGhostMarkers: function () {\n    this.ghostMarkers.forEach(({ marker }) => {\n      marker.removeFrom(this._map);\n    });\n    this.ghostMarkers = [];\n  },\n\n  clearPolygon: function () {\n    this.polygon && this.polygon.removeFrom(this._map);\n    this.polygon = null;\n    this.closeLine && this.closeLine.removeFrom(this._map);\n    this.closeLine = null;\n  },\n\n  deactivate: function () {\n    removeEndClickArea(this);\n    this.activateButton.classList.remove('active');\n    this._map.getContainer().classList.remove('drawing-area');\n    this.setPhase('inactive', true);\n  },\n\n  activate: function () {\n    // When activating the plugin we'll disable dragging temporarely (in case we are drawing a rect)\n    this._map.dragging.disable();\n    this.activateButton.classList.add('active');\n    this._map.getContainer().classList.add('drawing-area');\n    this.setPhase('draw', true);\n  },\n\n  _handleMouseMove: function (event) {\n    if (!this.options.active) {\n      return;\n    }\n    onMouseMove.bind(this)(event);\n  },\n});\n\nexport const drawAreaSelection = function (options = {}) {\n  return new DrawAreaSelection(options);\n};\n","import { Util, Control } from 'leaflet';\nimport { DrawAreaSelection, drawAreaSelection } from './control';\n\nUtil.extend(Control, {\n  DrawAreaSelection,\n  drawAreaSelection,\n});\n\nexport { DrawAreaSelection, drawAreaSelection };\n","/* eslint-disable no-console */\nimport { Map, Icon, tileLayer, marker, geoJSON, Browser } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '@bopen/leaflet-area-selection/dist/index.css';\nimport { DrawAreaSelection } from '@bopen/leaflet-area-selection';\n\nimport './index.css';\n\nimport icon from './B-Open.svg';\n\n// See https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-483402699\ndelete Icon.Default.prototype._getIconUrl;\nIcon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst center = [41.901493, 12.5009157];\n\nconst map = new Map('root', {\n  // Fix for a bug in Leaflet 1.7.1. See https://github.com/Leaflet/Leaflet/issues/7255\n  tap: false,\n  dragging: !Browser.mobile,\n}).setView(center, 13);\n\ntileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  attribution:\n    '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n})\n  .on('load', () => {\n    window.MAP_LOADED = true;\n  })\n  .addTo(map);\n\nconst popup = document.createElement('div');\npopup.innerHTML = `<div style=\"text-align: center; font-size: 120%\">B-Open</div>\n<img alt=\"B-Open logo\" width=\"75\" src=\"${icon}\" />\n`;\n\nmarker(center).addTo(map).bindPopup(popup);\n\nconst areaSelection = new DrawAreaSelection({\n  onPolygonReady: (polygon) => {\n    const preview = document.getElementById('polygon');\n    preview.textContent = JSON.stringify(polygon.toGeoJSON(3), undefined, 2);\n    preview.scrollTop = preview.scrollHeight;\n  },\n  onPolygonDblClick: (polygon, control, ev) => {\n    const geojson = geoJSON(polygon.toGeoJSON(), {\n      style: {\n        opacity: 0.5,\n        fillOpacity: 0.2,\n        color: 'red',\n      },\n    });\n    geojson.addTo(map);\n    control.deactivate();\n  },\n  onButtonActivate: () => {\n    const preview = document.getElementById('polygon');\n    preview.textContent = 'Please, draw your polygon';\n    console.log('Please, draw your polygon');\n  },\n  onButtonDeactivate: (polygon) => {\n    const preview = document.getElementById('polygon');\n    console.log('Deactivated');\n    preview.textContent = `Deactivated! Current polygon is:\n\n${polygon ? JSON.stringify(polygon.toGeoJSON(3), undefined, 2) : 'null'}`;\n  },\n  position: 'topleft',\n});\n\nmap.addControl(areaSelection);\n\nconst command = document.querySelector('#control');\ncommand.addEventListener('click', function () {\n  if (areaSelection.phase !== 'inactive') {\n    areaSelection.deactivate();\n  } else {\n    areaSelection.activate();\n  }\n});\n"],"sourceRoot":""}